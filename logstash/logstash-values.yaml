logstashConfig:
  logstash.yml: |
    http.host: "0.0.0.0"
    xpack.monitoring.enabled: false

logstashPipeline:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      if [kubernetes] {
        mutate {
          add_field => {
            "pod_name" => "%{[kubernetes][pod][name]}"
            "namespace" => "%{[kubernetes][namespace]}"
            "container_name" => "%{[kubernetes][container][name]}"
          }
        }
      }
    }
    output {
      elasticsearch {
        hosts => ["https://elasticsearch-master.elk.svc.cluster.local:9200"]
        # index => "logs"
        user => "${ELASTIC_USERNAME}"
        password => "${ELASTIC_PASSWORD}"
        cacert => "/usr/share/logstash/certs/WildCardDomain4110.crt"
        ssl => true
        ssl_certificate_verification => false

        ilm_enabled => true
        ilm_policy => "elk-logs-policy"
        ilm_rollover_alias => "logs"
        action => "create"
      }
      stdout { codec => rubydebug }
    }

resources:
  requests:
    memory: "2Gi"
    cpu: "500m"
  limits:
    memory: "4Gi"
    cpu: "1"


service:
  ports:
    - name: beats
      port: 5044
      protocol: TCP
      targetPort: 5044
  type: ClusterIP

extraEnvs:
  - name: ELASTIC_USERNAME
    valueFrom:
      secretKeyRef:
        name: elk-credentials
        key: username
  - name: ELASTIC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elk-credentials
        key: password
  - name: LS_JAVA_OPTS
    value: "-Xmx2g -Xms2g"

extraVolumes:
  - name: azure-cert
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: elk-azure-cert

extraVolumeMounts:
  - name: azure-cert
    mountPath: /usr/share/logstash/certs
    readOnly: true

extraPorts:
  - name: beats
    containerPort: 5044
    protocol: TCP
logstashPodTemplate:
  spec:
    containers:
      - name: logstash
        ports:
          - containerPort: 5044
            name: beats
            protocol: TCP
