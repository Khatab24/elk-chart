replicaCount: 1

elasticsearchHosts: "http://elasticsearch-master:9200"

kibanaConfig:
  kibana.yml: |
    server.name: kibana
    server.host: 0.0.0.0
    elasticsearch.hosts: ["http://elasticsearch-master:9200"]
    elasticsearch.username: "${ELASTICSEARCH_USERNAME}"
    elasticsearch.password: "${ELASTICSEARCH_PASSWORD}"

extraEnvs:
  - name: ELASTICSEARCH_USERNAME
    valueFrom:
      secretKeyRef:
        name: elk-credentials
        key: username
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elk-credentials
        key: password

service:
  type: ClusterIP
  port: 5601

resources:
  requests:
    cpu: 200m
    memory: 512Mi
  limits:
    cpu: 500m
    memory: 1Gi

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: kibana.salamride.ca
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - kibana.salamride.ca
      secretName: elk-cert

persistence:
  enabled: false

podSecurityContext:
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false

livenessProbe:
  httpGet:
    path: /login
    port: 5601
  initialDelaySeconds: 60
  timeoutSeconds: 5

readinessProbe:
  httpGet:
    path: /login
    port: 5601
  initialDelaySeconds: 30
  timeoutSeconds: 3

tolerations: []

nodeSelector: {}

affinity: {}

serviceAccount:
  create: true
  name: "kibana"

extraVolumes:
  - name: secrets-store
    csi:
      driver: secrets-store.csi.k8s.io
      readOnly: true
      volumeAttributes:
        secretProviderClass: "elk-azure-credentials"

extraVolumeMounts:
  - name: secrets-store
    mountPath: "/mnt/secrets-store"
    readOnly: true