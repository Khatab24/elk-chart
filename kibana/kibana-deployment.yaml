apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: elk
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:7.17.3
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        env:
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: elk-credentials
              key: username
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elk-credentials
              key: password
        - name: ELASTICSEARCH_HOSTS
          value: "https://elasticsearch-master:9200"
        - name: ELASTICSEARCH_SSL_VERIFICATIONMODE
          value: "none"
        - name: SERVER_NAME
          value: kibana
        - name: SERVER_HOST
          value: "0.0.0.0"
        ports:
        - containerPort: 5601
        livenessProbe:
          httpGet:
            path: /login
            port: 5601
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /login
            port: 5601
          initialDelaySeconds: 30
          timeoutSeconds: 3
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: elk-azure-credentials

---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: elk
  labels:
    app: kibana
spec:
  selector:
    app: kibana
  ports:
  - port: 5601
    targetPort: 5601
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace: elk
  annotations:
    kubernetes.azure.com/tls-cert-keyvault-uri: "https://kv-AcmeCert-v4110-7s2s.vault.azure.net/certificates/WildCardDomain4110"
    kubernetes.azure.com/use-keyvault-cert: "true"
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  tls:
  - hosts:
    - kibana.salamride.ca
    secretName: elk-cert
  rules:
  - host: kibana.salamride.ca
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana
            port:
              number: 5601

